<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/o-fugi/sim_ws/src/gizmo_description/urdf/robots/gizmo/robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="gizmo">
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="LightGrey">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="DarkGrey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- transmissions -->
  <wheel_transmsission side="left"/>
  <wheel_transmsission side="right"/>
  <caster_transmsission side="front"/>
  <caster_transmsission side="back"/>
  <link name="base_footprint"/>
  <!--
       Base link is set at the center of the wheel axis.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.045"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!-- new mesh -->
        <!--cylinder length="0.09953" radius="0.10"/-->
        <mesh filename="package://gizmo_description/meshes/stacks/lego_wheels/base_link.STL"/>
      </geometry>
      <material name="LightGrey"/>
    </visual>
    <collision name="base_footprint_collision_base_link">
      <geometry>
        <cylinder length="0.03" radius="0.15"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.03"/>
    </collision>
    <inertial>
      <!-- COM -->
      <origin xyz="0.0 0 0"/>
      <mass value="2.4"/>
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <joint name="bumper_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="bumper_link"/>
  </joint>
  <link name="bumper_link">
    <collision name="base_footprint_collision_bumper_link">
      <geometry>
        <cylinder length="0.03" radius="0.15"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.01 0.0 0.03"/>
    </collision>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.00 0.0875 0.0"/>
    <axis xyz="0 0 1"/>
    <limit effort="2.0" velocity="10.0"/>
  </joint>
  <link name="wheel_left_link">
    <visual>
      <geometry>
        <mesh filename="package://gizmo_description/meshes/stacks/lego_wheels/wheel_link.STL"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.02" radius="0.035"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.00 -0.0875 0.0"/>
    <axis xyz="0 0 1"/>
    <limit effort="2.0" velocity="10.0"/>
  </joint>
  <link name="wheel_right_link">
    <visual>
      <geometry>
        <!--cylinder length="0.015" radius="0.0408"/-->
        <mesh filename="package://gizmo_description/meshes/stacks/lego_wheels/wheel_link.STL"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.02" radius="0.035"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_front_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.07778 0.0 -0.02542"/>
  </joint>
  <link name="caster_front_link">
    <visual>
      <geometry>
        <cylinder length="0.022" radius="0.0096"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.022" radius="0.0096"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="-0.07778 0.0 -0.02542"/>
  </joint>
  <link name="caster_back_link">
    <visual>
      <geometry>
        <cylinder length="0.022" radius="0.0096"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.022" radius="0.0096"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Gizmo's sensors -->
  <joint name="gyro_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="-0.0425 0.085 0.13"/>
    <parent link="base_footprint"/>
    <child link="gyro_link"/>
  </joint>
  <link name="gyro_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.0707 0.0707 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_left_link"/>
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.0707 -0.0707 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_right_link"/>
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.1 0.00 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_front_link"/>
  </joint>
  <link name="cliff_sensor_front_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="wheel_left_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
  </gazebo>
  <!--<gazebo reference="bumper_link">
      <sensor type="contact" name="bumpers">
        <always_on>1</always_on>
        <update_rate>50.0</update_rate>
        <visualize>true</visualize>
        <contact>
          <collision>bumper_link_collision</collision>
        </contact>
      </sensor>
    </gazebo>-->
  <gazebo reference="cliff_sensor_left_link">
    <sensor name="cliff_sensor_left" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_right_link">
    <sensor name="cliff_sensor_right" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_front_link">
    <sensor name="cliff_sensor_front" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!-- \t          Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="gyro_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>1.96e-06</stddev>
            <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <ns/>
      <!--<robotSimType>gizmo_hw_sim/GizmoHwGazebo</robotSimType>-->
      <!--<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>-->
      <robotSimType>kuri_gazebo/KuriHardwareGazebo</robotSimType>
      <controlPeriod>0.001</controlPeriod>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="ground_truth">
      <frameName>map</frameName>
      <bodyName>base_footprint</bodyName>
      <topicName>robot_pose_ground_truth</topicName>
      <updateRate>30.0</updateRate>
    </plugin>
  </gazebo>
  <transmission name="body_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="body_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
    <joint name="body_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <joint name="body_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="body_link"/>
  </joint>
  <link name="body_link">
    <visual>
      <geometry>
        <mesh filename="package://gizmo_description/meshes/gizmo/body.dae"/>
      </geometry>
    </visual>
    <!--
      <collision>
        <geometry>
          <cylinder length="0.25" radius="0.10"/>
        </geometry>
        <origin xyz="0.0 0 0.125"/>
      </collision>
-->
    <inertial>
      <origin xyz="0.0 0 0.125"/>
      <mass value="2.4"/>
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <transmission name="head_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="head_1_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
    <joint name="head_1_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="head_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="head_2_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
    <joint name="head_2_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="eyelids_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="eyelids_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
    <joint name="eyelids_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <joint name="head_1_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.360"/>
    <parent link="body_link"/>
    <child link="head_1_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="20.0" lower="-1.0" upper="1.0" velocity="2.0"/>
  </joint>
  <link name="head_1_link">
    <inertial>
      <!-- COM -->
      <origin xyz="0.0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="head_2_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="head_1_link"/>
    <child link="head_2_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="20.0" lower="-0.52" upper="0.87" velocity="2.0"/>
  </joint>
  <link name="head_2_link">
    <visual>
      <geometry>
        <mesh filename="package://gizmo_description/meshes/gizmo/head.dae"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <!-- COM -->
      <origin xyz="0.0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
    </inertial>
  </link>
  <joint name="eyelids_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="head_2_link"/>
    <child link="eyelids_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="20.0" lower="-1.0" upper="1.0" velocity="10.0"/>
  </joint>
  <link name="eyelids_link">
    <visual>
      <geometry>
        <mesh filename="package://gizmo_description/meshes/gizmo/eyelids.dae"/>
      </geometry>
    </visual>
    <inertial>
      <!-- COM -->
      <origin xyz="0.0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <link name="upward_looking_camera_link">
    <visual>
      <!--origin xyz="0 0 0" rpy="${M_PI/2} 0 ${M_PI/2}" /-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.001"/>
      </geometry>
      <material name="DarkGrey">
        <color rgba="0.215625 0.215625 0.215625 1"/>
      </material>
    </visual>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="upward_looking_camera_joint" type="fixed">
    <!-- Orientations applied in YPR order!-->
    <origin rpy="0 0 0" xyz="0.061 -0.032 0.015"/>
    <parent link="head_2_link"/>
    <child link="upward_looking_camera_link"/>
  </joint>
  <link name="upward_looking_camera_optical_frame">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="upward_looking_camera_optical_joint" type="fixed">
    <!-- Orientations applied in YPR order!-->
    <!-- <origin xyz="0 0 0" rpy="0 ${-M_PI/2} ${M_PI/2}" /> -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="upward_looking_camera_link"/>
    <child link="upward_looking_camera_optical_frame"/>
  </joint>
  <turtlebot_sim_usb_camera name="upward_looking"/>
  <single_2D_laser parent="base_link"/>
</robot>

