//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gizmo
{
    public class MVolume : Message
    {
        public const string RosMessageName = "gizmo_msgs/Volume";

        //  Volume level
        //  If is_relative is True, this adds to the current volume level
        //  If is_relative is False, this sets the current volume level
        //  Note: level is on the range [0:100], and will be clapmed appropriately
        //  upon receipt of this message
        public short level;
        //  Whether the level should be added to the current level or set absolutely
        public bool is_relative;
        //  Mute and unmute
        //  If either of these are set to true, the above values will not be used
        //  Muting stores the volume level and sets the level to 0
        //  Unmuting restores the volume level (or uses the default volume if no level
        //  has been stored)
        public bool mute;
        public bool unmute;

        public MVolume()
        {
            this.level = 0;
            this.is_relative = false;
            this.mute = false;
            this.unmute = false;
        }

        public MVolume(short level, bool is_relative, bool mute, bool unmute)
        {
            this.level = level;
            this.is_relative = is_relative;
            this.mute = mute;
            this.unmute = unmute;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.level));
            listOfSerializations.Add(BitConverter.GetBytes(this.is_relative));
            listOfSerializations.Add(BitConverter.GetBytes(this.mute));
            listOfSerializations.Add(BitConverter.GetBytes(this.unmute));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.level = BitConverter.ToInt16(data, offset);
            offset += 2;
            this.is_relative = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.mute = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.unmute = BitConverter.ToBoolean(data, offset);
            offset += 1;

            return offset;
        }

        public override string ToString()
        {
            return "MVolume: " +
            "\nlevel: " + level.ToString() +
            "\nis_relative: " + is_relative.ToString() +
            "\nmute: " + mute.ToString() +
            "\nunmute: " + unmute.ToString();
        }
    }
}
