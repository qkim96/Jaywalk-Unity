//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Gizmo
{
    public class MNavigationGoal : Message
    {
        public const string RosMessageName = "gizmo_msgs/NavigationGoal";

        //  This is a message covering all types of navigation
        public const sbyte GO_TO_WAYPOINT = 0;
        public const sbyte DRIVE_TO_POINT_IN_IMAGE = 1;
        public const sbyte FOLLOW_ME = 2;
        //  Type of navigation
        public sbyte nav_type;
        //  Goal of navigation
        public Geometry.MPose pose;
        //  Waypoint UUID for GO_TO_WAYPOINT
        public string waypoint_uuid;
        //  Head pose for GO_TO_WAYPOINT
        public MHeadPose head_pose;
        //  Request ID (if from client)
        public string request_id;

        public MNavigationGoal()
        {
            this.nav_type = 0;
            this.pose = new Geometry.MPose();
            this.waypoint_uuid = "";
            this.head_pose = new MHeadPose();
            this.request_id = "";
        }

        public MNavigationGoal(sbyte nav_type, Geometry.MPose pose, string waypoint_uuid, MHeadPose head_pose, string request_id)
        {
            this.nav_type = nav_type;
            this.pose = pose;
            this.waypoint_uuid = waypoint_uuid;
            this.head_pose = head_pose;
            this.request_id = request_id;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(new[] { (byte)this.nav_type });
            listOfSerializations.AddRange(pose.SerializationStatements());
            listOfSerializations.Add(SerializeString(this.waypoint_uuid));
            listOfSerializations.AddRange(head_pose.SerializationStatements());
            listOfSerializations.Add(SerializeString(this.request_id));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.nav_type = (sbyte)data[offset]; ;
            offset += 1;
            offset = this.pose.Deserialize(data, offset);
            var waypoint_uuidStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.waypoint_uuid = DeserializeString(data, offset, waypoint_uuidStringBytesLength);
            offset += waypoint_uuidStringBytesLength;
            offset = this.head_pose.Deserialize(data, offset);
            var request_idStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.request_id = DeserializeString(data, offset, request_idStringBytesLength);
            offset += request_idStringBytesLength;

            return offset;
        }

        public override string ToString()
        {
            return "MNavigationGoal: " +
            "\nnav_type: " + nav_type.ToString() +
            "\npose: " + pose.ToString() +
            "\nwaypoint_uuid: " + waypoint_uuid.ToString() +
            "\nhead_pose: " + head_pose.ToString() +
            "\nrequest_id: " + request_id.ToString();
        }
    }
}
