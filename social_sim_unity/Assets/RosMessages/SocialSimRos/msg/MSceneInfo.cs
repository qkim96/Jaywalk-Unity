//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.SocialSimRos
{
    public class MSceneInfo : Message
    {
        public const string RosMessageName = "social_sim_ros/SceneInfo";

        //  Message containing the parameters for Unity Scene trials
        public MHeader header;
        public string scenario_name;
        //  Which scene we are running
        public Geometry.MPose robot_start_pose;
        //  Pose of robot start location
        public Geometry.MPose robot_target_pose;
        //  Pose of robot target location
        public ushort num_people;
        //  Number of people in scene
        public ushort num_groups;
        //  Number of groups in scene
        public string environment;
        //  Which environment

        public MSceneInfo()
        {
            this.header = new MHeader();
            this.scenario_name = "";
            this.robot_start_pose = new Geometry.MPose();
            this.robot_target_pose = new Geometry.MPose();
            this.num_people = 0;
            this.num_groups = 0;
            this.environment = "";
        }

        public MSceneInfo(MHeader header, string scenario_name, Geometry.MPose robot_start_pose, Geometry.MPose robot_target_pose, ushort num_people, ushort num_groups, string environment)
        {
            this.header = header;
            this.scenario_name = scenario_name;
            this.robot_start_pose = robot_start_pose;
            this.robot_target_pose = robot_target_pose;
            this.num_people = num_people;
            this.num_groups = num_groups;
            this.environment = environment;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(SerializeString(this.scenario_name));
            listOfSerializations.AddRange(robot_start_pose.SerializationStatements());
            listOfSerializations.AddRange(robot_target_pose.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.num_people));
            listOfSerializations.Add(BitConverter.GetBytes(this.num_groups));
            listOfSerializations.Add(SerializeString(this.environment));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            var scenario_nameStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.scenario_name = DeserializeString(data, offset, scenario_nameStringBytesLength);
            offset += scenario_nameStringBytesLength;
            offset = this.robot_start_pose.Deserialize(data, offset);
            offset = this.robot_target_pose.Deserialize(data, offset);
            this.num_people = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.num_groups = BitConverter.ToUInt16(data, offset);
            offset += 2;
            var environmentStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.environment = DeserializeString(data, offset, environmentStringBytesLength);
            offset += environmentStringBytesLength;

            return offset;
        }

        public override string ToString()
        {
            return "MSceneInfo: " +
            "\nheader: " + header.ToString() +
            "\nscenario_name: " + scenario_name.ToString() +
            "\nrobot_start_pose: " + robot_start_pose.ToString() +
            "\nrobot_target_pose: " + robot_target_pose.ToString() +
            "\nnum_people: " + num_people.ToString() +
            "\nnum_groups: " + num_groups.ToString() +
            "\nenvironment: " + environment.ToString();
        }
    }
}
